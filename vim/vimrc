set viminfo+=n~/.dir/vim/viminfo
exe 'set rtp+=' . expand('~/.dir/vim')

set encoding=UTF-8
if has("gui_running")
	set guifont=Source\ Code\ Pro\ for\ Powerline:h14
endif

syntax enable				" enable syntax processing
set tabstop=8				" number of visual spaces per TAB
set softtabstop=4			" number of spaces in tab when editing
set shiftwidth=4
"set expandtab				" tabs are spaces

set ruler
set cursorline
set whichwrap+=<,>,h,l,[,]	" causes the left and right arrow keys, as well as h and l, to wrap when used at beginning or end of lines
set nowrap
"set list
set number				" show line numbers
"set relativenumber 			" show relative numbers
set showcmd				" show command in bottom bar
set cursorline				" highlight curren
set wildmenu				" visual autocomplete for command menu
set lazyredraw				" redraw only when we need to.
set showmatch				" highlight matching [{()}]
filetype indent on			" load filetype-specific indent files

set incsearch				" search as characters are entered
set hlsearch				" highlight matches
nnoremap <leader><space> :nohlsearch<CR>
							" turn off search highlight

set clipboard=unnamed 		" copied text from vim can be pasted by CTRL+V and copied text from CTRL+C can be pasted into vim with ‘p’
set clipboard=unnamedplus

set foldenable				" enable folding
set foldlevelstart=10		" open most folds by default
set foldnestmax=10			" 10 nested fold max
set foldmethod=indent		" fold based on indent level
nnoremap <space> za
							" space open/closes folds

"set laststatus=2
"set statusline=[%n]\ %<%F\ \ \ [%M%R%H%W%Y][%{&ff}]\ \ %=\ line:%l/%L\ col:%c\ \ \ %p%%\ \ \ @%{strftime(\"%H:%M:%S\")}

" move vertically by visual line
nnoremap j gj
nnoremap k gk
" move to beginning/end of line
nnoremap B ^
nnoremap E $
" $/^ doesn't do anything
"nnoremap $ <nop>
"nnoremap ^ <nop>
" highlight last inserted text
nnoremap gV `[v`]

" escape with a ‘jk’ or ‘kj’ press
cnoremap kj <C-C>
cnoremap jk <C-C>

"
" pathogen
"
"execute pathogen#infect()
call pathogen#infect()
call pathogen#helptags()

"
" NERDTree
"
"autocmd vimenter * NERDTree
silent! nmap <C-p> :NERDTreeToggle<CR>
silent! map <F3> :NERDTreeFind<CR>

let g:NERDTreeMapActivateNode="<F3>"
let g:NERDTreeMapPreview="<F4>"

" automatically close NerdTree when you open a file
let NERDTreeQuitOnOpen = 1

" Automatically delete the buffer of the file you just deleted with NerdTree
let NERDTreeAutoDeleteBuffer = 1

" making it prettier
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

"
" vim-go
"
filetype plugin on			" Enable filetype plugins

autocmd FileType go nmap <leader>b  <Plug>(go-build)
autocmd FileType go nmap <leader>r  <Plug>(go-run)
autocmd FileType go nmap <Leader>i  <Plug>(go-info)

"let g:go_highlight_types = 1
"let g:go_highlight_fields = 1
"let g:go_highlight_functions = 1
"let g:go_highlight_function_calls = 1
"let g:go_highlight_operators = 1
"let g:go_highlight_extra_types = 1
"let g:go_highlight_build_constraints = 1

"let g:go_auto_sameids = 1
"let g:go_auto_type_info = 1

"
" colour themes
"
set background=dark
colorscheme dracula
if has("gui_running")
	colorscheme solarized
endif

"
" Vim-Airline Configuration
"
"let g:airline#extensions#tabline#enabled = 1
let g:airline_theme='solarized'
let g:airline_solarized_bg='dark'

if has("gui_running")
	let g:airline_powerline_fonts = 1
endif

"
" syntastic
"
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

